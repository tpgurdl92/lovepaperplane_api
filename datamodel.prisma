type User {
  id: ID! @id
  username:String! @unique
  nickname:String! 
  machineId:String! @unique
  bio:String
  birthDate: String!
  gender: String!
  rooms: [Room]! @relation(name:"RoomOfUser")
  banningUser : [User]! @relation(name: "BanningUserofUser")
  location: String!
  pushFlag : Boolean!
  availablePlane : Int!
  complains:[Complain]! @relation(name:"ComplainOfUser")
  createdAt:DateTime! @createdAt
  updatedAt:DateTime! @updatedAt
}


type Room {
  id:ID! @id
  participant:[User]! @relation(name:"RoomOfUser")
  messages:[Message]!  @relation(name:"MessageOfRoom")
  isAlive: Boolean!
  createdAt:DateTime! @createdAt
  updatedAt:DateTime! @updatedAt
}

type Message{
  id:ID! @id
  type:String!
  data: String!
  from: User! @relation(name:"From")
  to:User! @relation(name:"To")
  room:Room! @relation(name:"MessageOfRoom")
  createdAt:DateTime! @createdAt
  updatedAt:DateTime! @updatedAt
  isChecked: Boolean!
}

type Complain{
  id:ID! @id
  from: User! 
  to:User! @relation(name:"ComplainOfUser")
  message:Message! @relation(name:"MessageOfComplain")
  category:String!
  comment:String
}